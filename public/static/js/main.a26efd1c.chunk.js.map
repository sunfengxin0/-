{"version":3,"sources":["component/LoginAndRegister.jsx","component/ToDoList.jsx","App.js","serviceWorker.js","index.js","component/css/toDoList.module.css"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","LoginAndRegister","loginRef","React","createRef","registerormRef","onFinish","values","that","axios","post","username","password","then","ret","message","success","props","handleCancel","islogin","catch","error","registeronFinish","showModal","className","title","visible","this","onOk","handleOk","onCancel","bind","footer","name","ref","Item","label","validateTrigger","rules","required","Password","style","float","onClick","showModal2","marginLeft","type","htmlType","visible2","handleCancel2","min","hasFeedback","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","Component","Search","Input","confirm","Modal","ToDoList","changeStute","element","put","res","getItemsData","err","console","log","deleteItmes","delete","state","userid","showModalNotClear","setState","current","resetFields","get","Date","getTime","data","uid","logout","icon","ExclamationCircleOutlined","okText","cancelText","items","additem","item","status","toDoListItems","loginBtn","doingNumber","doneNumber","doingItems","map","key","_id","checked","onChange","itemid","checkbox","itemsName","CloseCircleTwoTone","closeBtn","doneItems","opacity","fontSize","lineHeight","color","cursor","position","overflow","topBar","w","display","logo","flex","marginTop","placeholder","enterButton","onSearch","body","height","tudolist","defaults","withCredentials","baseURL","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a26efd1c.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Button, Input, Modal, Form, message } from \"antd\"\r\nimport axios from \"axios\"\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 20,\r\n  },\r\n}\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 17,\r\n    span: 9,\r\n  },\r\n}\r\n\r\nexport default class LoginAndRegister extends Component {\r\n  loginRef = React.createRef()\r\n  registerormRef = React.createRef()\r\n  render() {\r\n    return (\r\n      <div className=\"loginAndRegister\">\r\n        <Modal\r\n          title=\"登录窗口\"\r\n          visible={this.props.visible}\r\n          onOk={this.props.handleOk}\r\n          onCancel={this.props.handleCancel.bind(this, this)}\r\n          footer={null}\r\n        >\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            ref={this.loginRef}\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item\r\n              label=\"用户名\"\r\n              name=\"username\"\r\n              validateTrigger=\"onBlur\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"密码\"\r\n              validateTrigger=\"onBlur\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your password!\" },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button\r\n                style={{ float: \"left\" }}\r\n                onClick={this.props.showModal2.bind(this, this)}\r\n              >\r\n                注册\r\n              </Button>\r\n\r\n              <Button\r\n                style={{ float: \"left\", marginLeft: \"8px\" }}\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n              >\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          title=\"注册窗口\"\r\n          visible={this.props.visible2}\r\n          onCancel={this.props.handleCancel2.bind(this, this)}\r\n          footer={null}\r\n        >\r\n          <Form\r\n            {...layout}\r\n            name=\"register\"\r\n            ref={this.registerormRef}\r\n            onFinish={this.registeronFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              label=\"用户名\"\r\n              validateTrigger=\"onBlur\"\r\n              rules={[\r\n                {\r\n                  min: 6,\r\n                  message: \"用户名最少为6位\",\r\n                },\r\n                {\r\n                  required: true,\r\n                  message: \"请输入用户名\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              validateTrigger=\"onBlur\"\r\n              label=\"密码\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请输入密码\",\r\n                },\r\n                {\r\n                  min: 6,\r\n                  message: \"密码的长度至少为6位\",\r\n                },\r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"confirm\"\r\n              validateTrigger=\"onBlur\"\r\n              label=\"确认密码\"\r\n              dependencies={[\"password\"]}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请确认密码\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve()\r\n                    }\r\n                    return Promise.reject(\"两次应当输入同样的密码！\")\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n              <Button onClick={this.props.showModal.bind(this, this)}>\r\n                登录\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                style={{ marginLeft: \"8px\" }}\r\n              >\r\n                注册\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  onFinish = (values) => {\r\n    var that = this\r\n    axios\r\n      .post(\"/login\", {\r\n        username: values.username,\r\n        password: values.password,\r\n      })\r\n      .then(function (ret) {\r\n        message.success(\"登录成功\")\r\n        that.props.handleCancel(that)\r\n        that.props.islogin()\r\n      })\r\n      .catch((ret) => {\r\n        message.error(\"登录密码或用户名错误\")\r\n      })\r\n  }\r\n  registeronFinish = (values) => {\r\n    var that = this\r\n    axios\r\n      .post(\"/register\", {\r\n        username: values.username,\r\n        password: values.password,\r\n      })\r\n      .then(function (ret) {\r\n        message.success(\"注册用户成功\")\r\n        that.props.showModal(that)\r\n      })\r\n      .catch((ret) => {\r\n        message.error(\"注册用户失败\")\r\n      })\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { Button, Input, Modal, message } from \"antd\"\r\nimport style from \"./css/toDoList.module.css\"\r\nimport {\r\n  CloseCircleTwoTone,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\"\r\nimport LoginAndRegister from \"./LoginAndRegister.jsx\"\r\nimport axios from \"axios\"\r\n\r\nconst { Search } = Input\r\nconst { confirm } = Modal\r\nexport default class ToDoList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      visible: false,\r\n      visible2: false,\r\n      userid: \"\",\r\n      username: \"\",\r\n      //利用假数据将静态页面完成\r\n      items: [],\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.islogin()\r\n  }\r\n\r\n  render() {\r\n    let doingNumber = 0\r\n    let doneNumber = 0\r\n\r\n    const doingItems = this.state.items.map((element) => {\r\n      if (!element.status) {\r\n        doingNumber++\r\n        return (\r\n          <li key={element._id} className={style.items}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={element.status}\r\n              onChange={this.changeStute.bind(this, {\r\n                itemid: element._id,\r\n                item: element.item,\r\n                status: true,\r\n              })}\r\n              className={style.checkbox}\r\n            ></input>\r\n            <span className={style.itemsName}>{element.item}</span>\r\n            <CloseCircleTwoTone\r\n              className={style.closeBtn}\r\n              onClick={this.deleteItmes.bind(this, element._id)}\r\n            />\r\n          </li>\r\n        )\r\n      } else {\r\n        return false\r\n      }\r\n    })\r\n    const doneItems = this.state.items.map((element) => {\r\n      if (element.status) {\r\n        doneNumber++\r\n        return (\r\n          <li\r\n            key={element._id}\r\n            className={style.items}\r\n            style={{ opacity: \"0.5\" }}\r\n          >\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={element.status}\r\n              onChange={this.changeStute.bind(this, {\r\n                itemid: element._id,\r\n                item: element.item,\r\n                status: false,\r\n              })}\r\n              className={style.checkbox}\r\n            ></input>\r\n            <span className={style.itemsName}>{element.item}</span>\r\n            <CloseCircleTwoTone\r\n              className={style.closeBtn}\r\n              onClick={this.deleteItmes.bind(this, element._id)}\r\n            />\r\n          </li>\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    })\r\n    let loginBtn\r\n    if (this.state.username) {\r\n      loginBtn = (\r\n        <div\r\n          style={{\r\n            fontSize: \"20px\",\r\n            lineHeight: \"45px\",\r\n            marginLeft: \"10px\",\r\n            color: \"#1890ff\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={this.logout}\r\n        >\r\n          {this.state.username}\r\n        </div>\r\n      )\r\n    } else {\r\n      loginBtn = (\r\n        <Button className={style.loginBtn} onClick={this.showModalNotClear}>\r\n          登录\r\n        </Button>\r\n      )\r\n    }\r\n    return (\r\n      <div\r\n        className=\"main\"\r\n        style={{ position: \"relative\", overflow: \"hidden\" }}\r\n      >\r\n        <div className={style.topBar}>\r\n          <div className={style.w} style={{ display: \"flex\" }}>\r\n            <i className={style.logo}>ToDoList</i>\r\n\r\n            <Search\r\n              style={{\r\n                float: \"right\",\r\n                flex: \"1\",\r\n                marginTop: \"8px\",\r\n                marginLeft: \"20px\",\r\n              }}\r\n              placeholder=\"输入待添加项目\"\r\n              enterButton=\"添加项目\"\r\n              onSearch={this.additem}\r\n            />\r\n            {loginBtn}\r\n          </div>\r\n        </div>\r\n        <div className={style.body}>\r\n          <div className={style.w}>\r\n            <div\r\n              style={{ height: \"30px\", fontSize: \"20px\", lineHeight: \"40px\" }}\r\n            >\r\n              <div style={{ float: \"left\" }}>正在进行</div>\r\n              <div style={{ float: \"right\" }}>剩余个数：{doingNumber}</div>\r\n            </div>\r\n            <div>\r\n              <ul className={style.tudolist}>{doingItems}</ul>\r\n            </div>\r\n            <div\r\n              style={{\r\n                marginTop: \"20px\",\r\n                height: \"30px\",\r\n                fontSize: \"20px\",\r\n                lineHeight: \"40px\",\r\n              }}\r\n            >\r\n              <div style={{ float: \"left\" }}>已经完成</div>\r\n              <div style={{ float: \"right\" }}>完成个数：{doneNumber}</div>\r\n            </div>\r\n            <div>\r\n              <ul className={style.tudolist}>{doneItems}</ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <LoginAndRegister\r\n          visible={this.state.visible}\r\n          visible2={this.state.visible2}\r\n          showModal={this.showModal}\r\n          showModal2={this.showModal2}\r\n          handleCancel={this.handleCancel}\r\n          handleCancel2={this.handleCancel2}\r\n          islogin={this.islogin}\r\n        ></LoginAndRegister>\r\n      </div>\r\n    )\r\n  }\r\n  changeStute = (element) => {\r\n    axios\r\n      .put(\"/modifytodolistitem\", element)\r\n      .then((res) => {\r\n        this.getItemsData()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  deleteItmes = (element) => {\r\n    console.log(element)\r\n    axios\r\n      .delete(\r\n        \"/deletetodolistitem?uid=\" + this.state.userid + \"&itemid=\" + element\r\n      )\r\n      .then((res) => {\r\n        this.getItemsData()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  //   实现窗口显示的转换\r\n  showModalNotClear = () => {\r\n    this.setState({\r\n      visible: true,\r\n      visible2: false,\r\n    })\r\n  }\r\n  showModal = (that) => {\r\n    that.registerormRef.current.resetFields()\r\n    this.setState({\r\n      visible: true,\r\n      visible2: false,\r\n    })\r\n  }\r\n  showModal2 = (that) => {\r\n    that.loginRef.current.resetFields()\r\n    this.setState({\r\n      visible2: true,\r\n      visible: false,\r\n    })\r\n  }\r\n  handleCancel = (that) => {\r\n    that.loginRef.current.resetFields()\r\n    this.setState({\r\n      visible: false,\r\n    })\r\n  }\r\n  handleCancel2 = (that) => {\r\n    that.registerormRef.current.resetFields()\r\n    this.setState({\r\n      visible2: false,\r\n    })\r\n  }\r\n  islogin = () => {\r\n    if (!this.state.username) {\r\n      axios\r\n        .get(\"/islogin?time=\" + new Date().getTime())\r\n        .then((res) => {\r\n          this.setState({\r\n            username: res.data.username,\r\n            userid: res.data.uid,\r\n          })\r\n          this.getItemsData()\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    let that = this\r\n    confirm({\r\n      title: \"您要退出登录吗\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      onOk() {\r\n        axios\r\n          .get(\"/logout\")\r\n          .then((res) => {\r\n            that.setState({\r\n              userid: \"\",\r\n              username: \"\",\r\n              items: [],\r\n            })\r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n          })\r\n      },\r\n      onCancel() {},\r\n    })\r\n  }\r\n\r\n  additem = (value) => {\r\n    axios\r\n      .post(\"/newtodolistitem\", {\r\n        uid: this.state.userid,\r\n        item: value,\r\n        status: false,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n        message.success(\"添加条目成功\")\r\n        this.getItemsData()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  getItemsData = () => {\r\n    axios\r\n      .get(\"/gettodolist?uid=\" + this.state.userid)\r\n      .then((res) => {\r\n        this.setState({\r\n          items: res.data.data.toDoListItems,\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n","import React from \"react\"\nimport ToDoList from \"./component/ToDoList.jsx\"\nimport \"antd/dist/antd.css\"\nimport axios from \"axios\"\n\naxios.defaults.withCredentials = true\naxios.defaults.baseURL = \"http://localhost\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoList></ToDoList>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"toDoList_topBar__23Ydy\",\"w\":\"toDoList_w__rZ8zt\",\"logo\":\"toDoList_logo__uyTLW\",\"loginBtn\":\"toDoList_loginBtn__2K92d\",\"body\":\"toDoList_body__acogh\",\"tudolist\":\"toDoList_tudolist__3Oczj\",\"items\":\"toDoList_items__2BCP7\",\"checkbox\":\"toDoList_checkbox__3xk1T\",\"itemsName\":\"toDoList_itemsName__20yyy\",\"closeBtn\":\"toDoList_closeBtn__2Q4TN\"};"],"sourceRoot":""}